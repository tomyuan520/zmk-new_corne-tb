#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "BASE";
            bindings = <
&kp ESC     &kp Q  &kp W  &kp E     &kp R         &kp T                               &kp UP                &kp Y      &kp U     &kp I      &kp O    &kp P     &kp BSPC
&kp LCTRL   &kp A  &kp S  &kp D     &kp F         &kp G                     &kp LEFT  &kp ENTER  &kp RIGHT  &kp H      &kp J     &kp K      &kp L    &kp SEMI  &kp SQT
&kp LSHIFT  &kp Z  &kp X  &kp C     &kp V         &kp B        &kp SPACE              &kp DOWN              &kp N      &kp M     &kp COMMA  &kp DOT  &kp FSLH  &mo 1
                          &kp LGUI  &kp LEFT_ALT  &lt 0 SPACE                                               &kp ENTER  &kp RALT  &kp RCTRL
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        lower_layer {
            display-name = "LOWER";
            bindings = <
&kp TAB     &kp N1           &kp N2          &kp N3        &kp N4     &kp N5                                          &mmv MOVE_UP                     &kp N6             &kp N7     &kp N8         &kp N9  &kp N0  &kp BSPC
&kp LCTRL   &kp LEFT         &kp DOWN        &kp UP_ARROW  &kp RIGHT  &kp LEFT_BRACKET                &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp RIGHT_BRACKET  &kp MINUS  &trans         &trans  &trans  &trans
&kp LSHIFT  &rgb_ug RGB_OFF  &rgb_ug RGB_ON  &trans        &kp GRAVE  &kp BACKSLASH     &kp C_MUTE                    &mmv MOVE_DOWN                   &kp GRAVE          &kp EQUAL  &kp GLOBE      &trans  &trans  &trans
                                             &kp LGUI      &mo 2      &kp SPACE                                                                        &kp SPACE          &mo 2      &kp RIGHT_ALT
            >;

            sensor-bindings = <&rgb_encoder>;
        };

        raise_layer {
            display-name = "Raise";
            bindings = <
&kp F1          &kp F2        &kp F3        &kp F4        &kp F7        &kp F8                                     &mmv MOVE_UP                     &kp F9   &kp F10  &kp F11        &kp F12       &kp RPAR   &kp BSPC
&kp LCTRL       &kp C_VOL_DN  &kp C_PREV    &kp C_PP      &kp C_NEXT    &kp C_VOLUME_UP            &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &trans   &trans   &trans         &kp UP_ARROW  &trans     &trans
&kp LEFT_SHIFT  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4     &trans                    &mmv MOVE_DOWN                   &trans   &trans   &kp LEFT       &kp DOWN      &kp RIGHT  &trans
                                            &kp LGUI      &mo 3         &kp SPACE                                                                   &kp RET  &mo 3    &kp RIGHT_ALT
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        layer_3 {
            bindings = <
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                            &mmv MOVE_UP                     &bt BT_NXT  &trans  &trans  &trans  &trans  &bt BT_CLR_ALL
&trans      &trans        &mkp LCLK     &trans        &mkp RCLK     &trans                  &mmv MOVE_LEFT  &mkp MCLK       &mmv MOVE_RIGHT  &trans      &trans  &trans  &trans  &trans  &trans
&trans      &trans        &trans        &trans        &trans        &trans        &trans                    &mmv MOVE_DOWN                   &trans      &trans  &trans  &trans  &trans  &trans
                                        &trans        &trans        &trans                                                                   &trans      &trans  &trans
            >;

            label = "BT & Mouse";
            sensor-bindings = <&rgb_encoder>;
        };
    };
};
